name: Build & Publish Native Shell
on:
  workflow_dispatch:
    inputs:
      platform:
        required: true
        type: choice
        description: Select platform
        options:
          - ios
          - android
          - all
      reason:
        required: true
        description: Reason for new shell?
        type: string

jobs:
  native-shell:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Set TARGET_ENVIRONMENT variable
        run: |
          if [[ ${{ github.ref }} == 'refs/heads/development' ]]
          then
            echo "TARGET_ENVIRONMENT=development" >> $GITHUB_ENV
            echo "EXPO_PUBLIC_BUILD_ENV=development" >> $GITHUB_ENV
          elif [[ ${{ github.ref }} == 'refs/heads/main' ]]
          then
            echo "TARGET_ENVIRONMENT=production" >> $GITHUB_ENV
            echo "EXPO_PUBLIC_BUILD_ENV=production" >> $GITHUB_ENV
          elif [[ ${{ github.ref }} == 'refs/heads/staging' ]]
          then
            echo "TARGET_ENVIRONMENT=staging" >> $GITHUB_ENV
            echo "EXPO_PUBLIC_BUILD_ENV=staging" >> $GITHUB_ENV
          else
            echo "TARGET_ENVIRONMENT=development" >> $GITHUB_ENV
            echo "EXPO_PUBLIC_BUILD_ENV=development" >> $GITHUB_ENV
          fi

      - name: Set Environment Variables
        run: |
          echo "EXPO_PUBLIC_SUPABASE_URL=${{ secrets.EXPO_PUBLIC_SUPABASE_URL }}" >> $GITHUB_ENV
          echo "EXPO_PUBLIC_SUPABASE_ANON_KEY=${{ secrets.EXPO_PUBLIC_SUPABASE_ANON_KEY }}" >> $GITHUB_ENV

      - name: Set GIT_COMMIT_SHA variable
        run: echo "GIT_COMMIT_SHA=$(echo $GITHUB_SHA | cut -c 1-7)" >> $GITHUB_ENV

      - name: Print Input variables
        run: |
          echo "Platform:  ${{ github.event.inputs.platform }}"
          echo "Env: $TARGET_ENVIRONMENT"
          echo "Reason: ${{ github.event.inputs.reason }}"

      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "23.11.0"
          cache: "npm"

      - name: Install dependencies
        run: |
          npm install ci
      - uses: expo/expo-github-action@v8
        with:
          expo-cache: true
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      ### This set some secrets although the values are not necessarily secret,
      ### but is currently the only way of passing dynamic variables when using eas build
      - run: eas secret:create --scope=project --name=EXPO_PUBLIC_BUILD_NUMBER --value=${{ github.RUN_NUMBER }} --type=string --force
      - run: eas secret:create --scope=project --name=EXPO_PUBLIC_GIT_COMMIT_SHA --value=$GIT_COMMIT_SHA --type=string --force

      - name: Build with deploy
        run: eas build --profile $TARGET_ENVIRONMENT --platform ${{ github.event.inputs.platform }} --auto-submit --non-interactive --no-wait